# Generated by Django 4.0.5 on 2022-08-09 01:42

import django.utils.timezone
from django.db import migrations, models

import healthtracker.models.readings


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BasalMetabolicRateChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BMIChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BodyFatChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BodyWaterChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoneMassChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FitnessLevelChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('ok_values', models.CharField(blank=True, max_length=1024, null=True)),
                ('warning_values', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.FloatField(blank=True, null=True)),
                ('days_left', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MuscleMassChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Timestamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='VisceralFatLevelChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaistChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeightChecker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='Check status')),
                ('lower_danger', models.FloatField(blank=True, null=True, verbose_name='Lower danger bound')),
                ('lower_ok', models.FloatField(blank=True, null=True, verbose_name='Lower ok bound')),
                ('upper_ok', models.FloatField(blank=True, null=True, verbose_name='Upper ok bound')),
                ('upper_danger', models.FloatField(blank=True, null=True, verbose_name='Upper danger bound')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='Waist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='VisceralFatLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='MuscleMass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='Height',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='FitnessLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='BoneMass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='BodyWater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='BodyFat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
        migrations.CreateModel(
            name='BasalMetabolicRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='healthtracker.timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=(healthtracker.models.readings._BaseReading, models.Model),
        ),
    ]
